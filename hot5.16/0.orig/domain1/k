/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0/air";
    object      k;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [ 0 2 -2 0 0 0 0 ];

internalField   uniform 0.82;// approx k = 1.5*(I*U)^2 ; I = 0.1

boundaryField
{
    ".*"
    {
        type            inletOutlet;
        value           $internalField; 
        inletValue      $internalField;
    }
	".*_inlet"
	{
        type            fixedValue;
        value           $internalField;
	}
	/*".*_outlet"
	{
        type            inletOutlet;
        value           $internalField;
		inletValue      $internalField;
	}*/

	window_outlet
    {
		type            mappedField;
		sampleMode      nearestPatchFace;
		samplePatch 	window_outlet;
		sampleRegion    atrium;
		//offsetMode 		uniform;
		//offset  		(0 0 0);
		//interpolationScheme  cell;
        field           k;              // optional field name
        setAverage      no;             // apply an average value
        average         0;              // average to apply if setAverage
        value           uniform  0.1;		// place holder
		//inletValue      uniform  0.1;
		//Prt             0.85; 
    }			
	building_outlet
    {
		type            mappedField;
		sampleMode      nearestPatchFace;
		samplePatch 	building_outlet;
		sampleRegion    building;
		//offsetMode 		uniform;
		//offset  		(0 0 0);
		//interpolationScheme  cell;
        field           k;              // optional field name
        setAverage      no;             // apply an average value
        average         0;              // average to apply if setAverage
        value           uniform  0.1;		// place holder
		//inletValue      uniform  0.1;
		//Prt             0.85; 
    }
	 inlet
    {
        type            fixedValue;
        value           $internalField;
    }
	glass
    {
        type            kqRWallFunction;
        value           $internalField;
        inletValue      $internalField;
    }
	surround
    {
        type            kqRWallFunction;
        value           $internalField;
        inletValue      $internalField;
    }
		 domain1_to_building
    {
        type            kqRWallFunction;
        value           $internalField;
        inletValue      $internalField;
    }
	 domain1_to_atrium
    {
        type            kqRWallFunction;
        value           $internalField;
        inletValue      $internalField;
    }
	 domain1_to_floor
    {
        type            kqRWallFunction;
        value           $internalField;
        inletValue      $internalField;
    }

}


// ************************************************************************* //
